import telebot
import sqlite3
from telebot import types
import os
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())

bot = telebot.TeleBot(os.getenv('TOKEN'))

@bot.message_handler(commands=['start'])
def start(message):
    marcup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üíµ Buy-in')
    # button2 = types.KeyboardButton('üí∞ Prize')
    button3 = types.KeyboardButton('üìä Statistic')
    marcup.add(button1, button3)

    base = sqlite3.connect('new.db')
    cur = base.cursor()

    cur.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER, name varchar(50) PRIMARY KEY,'
                ' pass varchar(50), buy_in real, prize real)')
    base.commit()

    people_id = message.chat.id
    cur.execute('SELECT id FROM users WHERE id = {}'.format(people_id))
    data = cur.fetchone()
    if data is None:
        user_id = message.chat.id
        cur.execute('INSERT INTO users(id) VALUES(?)', (user_id,))
        base.commit()
        bot.send_message(message.chat.id, "üôÇ\n–ü—Ä–∏–≤–µ—Ç, {0.first_name}!"
                                          "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ".format(message.from_user), reply_markup=marcup)
    else:
        bot.send_message(message.chat.id, "üôÇ\n–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {0.first_name}!"
                         .format(message.from_user), reply_markup=marcup)
    cur.close()
    base.close()


def buy_in(message):
    marcup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üíµ Buy-in')
    button2 = types.KeyboardButton('üí∞ Prize')
    button3 = types.KeyboardButton('üìä Statistic')
    marcup.add(button1, button2, button3)

    base = sqlite3.connect('new.db')
    cur = base.cursor()
    user_id = message.chat.id
    buy_in_value = message.text.strip()

    try:
        buy_in_value = float(buy_in_value)
    except ValueError:
        bot.send_message(message.chat.id, "‚ùå\n–ó–Ω–∞—á–µ–Ω–∏–µ 'Buy-in' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                         reply_markup=marcup)
        return

    if float(buy_in_value) <= 0:
        bot.send_message(message.chat.id, "‚ùå\n–ó–Ω–∞—á–µ–Ω–∏–µ 'Buy-in' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                         reply_markup=marcup)
    else:
        cur.execute('INSERT INTO users (id, buy_in) VALUES (?,-ABS(?))', (user_id, buy_in_value))
        base.commit()
        bot.send_message(message.chat.id, "‚úÖ\n–ü—Ä–∏–Ω—è—Ç–æ\n\n–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è - —É–∫–∞–∂–∏—Ç–µ –í–∞—à –ü—Ä–∏–∑ –∏–ª–∏, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è,"
                                          " —Å–Ω–æ–≤–∞ –≤–≤–µ–¥–∏—Ç–µ 'Buy-in.'\n–•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!", reply_markup=marcup)
    cur.close()
    base.close()


def prize(message):
    marcup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üíµ Buy-in')
    button2 = types.KeyboardButton('üí∞ Prize')
    button3 = types.KeyboardButton('üìä Statistic')
    marcup.add(button1, button2, button3)

    base = sqlite3.connect('new.db')
    cur = base.cursor()
    user_id = message.chat.id
    prize_value = message.text.strip()

    try:
        prize_value = float(prize_value)
    except ValueError:
        bot.send_message(message.chat.id, "‚ùå\n–ó–Ω–∞—á–µ–Ω–∏–µ 'Prize' –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                         reply_markup=marcup)
        return

    if float(prize_value) < 0:
        bot.send_message(message.chat.id, "‚ùå\n–ó–Ω–∞—á–µ–Ω–∏–µ 'Prize' –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                         reply_markup=marcup)
    elif float(prize_value) == 0:
        cur.execute('INSERT INTO users (id, prize) VALUES (?,?)', (user_id, prize_value))
        base.commit()
        bot.send_message(message.chat.id, "üÜó\n–Ø –í–∞—Å –ø–æ–Ω—è–ª", reply_markup=marcup)
    else:
        cur.execute('INSERT INTO users (id, prize) VALUES (?,?)', (user_id, prize_value))
        base.commit()
        bot.send_message(message.chat.id, "üëç\n–û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞, {0.first_name}!".format(message.from_user),
                         reply_markup=marcup)
    cur.close()
    base.close()


@bot.message_handler(commands=['delete'])
def delete(message):
    base = sqlite3.connect('new.db')
    cur = base.cursor()
    user_id = message.chat.id
    cur.execute('DELETE FROM users WHERE id = ?', (user_id,))
    base.commit()
    bot.send_message(message.chat.id, "‚úÖ\n–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    cur.close()
    base.close()


@bot.message_handler(content_types=['text'])
def bot_message(message):
    marcup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üíµ Buy-in')
    button2 = types.KeyboardButton('üí∞ Prize')
    button3 = types.KeyboardButton('üìä Statistic')
    marcup.add(button1, button2, button3)

    base = sqlite3.connect('new.db')
    cur = base.cursor()
    if message.text == 'üíµ Buy-in':
        bot.send_message(message.chat.id, "‚úèÔ∏è\n–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤–∑–Ω–æ—Å–∞")
        bot.register_next_step_handler(message, buy_in)
    if message.text == 'üí∞ Prize':
        bot.send_message(message.chat.id, "‚úè\n–ö–∞–∫ —É—Å–ø–µ—Ö–∏?\n–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –≤—ã–∏–≥—Ä—ã—à–∞")
        bot.register_next_step_handler(message, prize)
    if message.text == 'üìä Statistic':
        people_id = message.chat.id
        bt = cur.execute('SELECT SUM(buy_in) FROM users WHERE id = {}'.format(people_id)).fetchone()[0]
        pt = cur.execute('SELECT SUM(prize) FROM users WHERE id = {}'.format(people_id)).fetchone()[0]
        if bt is None or pt is None:
            bot.send_message(message.chat.id, "‚ùóÔ∏è\n–î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –í–∞—à–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ,"
                                              " —á—Ç–æ–±—ã –í—ã —É–∫–∞–∑–∞–ª–∏ 'Buy-in' –∏ 'Prize'")
        else:
            total = bt + pt
            if total > 0:
                bot.send_message(message.chat.id, "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\nüíµ –í—Å–µ–≥–æ –≤—Ö–æ–¥–æ–≤ –Ω–∞ —Å—É–º–º—É:   "
                                 + str(bt) + "\nüí∞ –í—Å–µ–≥–æ –ø—Ä–∏–∑–æ–≤—ã—Ö –Ω–∞ —Å—É–º–º—É:   "
                                 + str(pt) + "\nüü¢ –ò—Ç–æ–≥–æ –≤—ã–∏–≥—Ä–∞–ª:   " + str(total)
                                 + "\n\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç", reply_markup=marcup)
            elif total == 0:
                bot.send_message(message.chat.id, "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\nüíµ –í—Å–µ–≥–æ –≤—Ö–æ–¥–æ–≤ –Ω–∞ —Å—É–º–º—É:   "
                                 + str(bt) + "\nüí∞ –í—Å–µ–≥–æ –ø—Ä–∏–∑–æ–≤—ã—Ö –Ω–∞ —Å—É–º–º—É:   "
                                 + str(pt) + "\nüü° –†–µ–∑—É–ª—å—Ç–∞—Ç:   " + str(total)
                                 + "\n\n–ù–µ–ø–ª–æ—Ö–æ! –û—Å—Ç–∞–ª—Å—è –ø—Ä–∏ —Å–≤–æ–∏—Ö", reply_markup=marcup)
            else:
                bot.send_message(message.chat.id, "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\nüíµ –í—Å–µ–≥–æ –≤—Ö–æ–¥–æ–≤ –Ω–∞ —Å—É–º–º—É:   "
                                 + str(bt) + "\nüí∞ –í—Å–µ–≥–æ –ø—Ä–∏–∑–æ–≤—ã—Ö –Ω–∞ —Å—É–º–º—É:   "
                                 + str(pt) + "\nüî¥ –í –∏—Ç–æ–≥–µ:   " + str(total) + "\n\n–í –ø–æ–∫–µ—Ä–µ —Ç–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç,"
                                 " —á—Ç–æ —á–∞—â–µ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—à—å, —á–µ–º –≤—ã–∏–≥—Ä—ã–≤–∞–µ—à—å", reply_markup=marcup)
    if message.text != 'üíµ Buy-in' and message.text != 'üí∞ Prize' and message.text != 'üìä Statistic':
        bot.send_message(message.chat.id, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ: "
                                          "\n'üíµ Buy-in' –∏–ª–∏ 'üí∞ Prize'")
    cur.close()
    base.close()


bot.polling(none_stop=True)
